syntax="proto3";

package services;
import "google/api/annotations.proto";
import "models.proto";
option go_package = "../services;services"; // 前一个services指生成的go文件的存放目录，不存在会创建；后一个services是go文件的包名

enum ProdctAreas{ // 枚举类型；每个枚举类型必须将其第一个类型映射为0
    A=0; // 必须有有一个0值，我们可以用这个0值作为默认值。
    B=1;
    C=2;
}

message ProductRequest{
    int32 product_id = 1; // 商品ID
    ProdctAreas product_area = 2; // 商品区域

}

message ProductRespones{
    int32 product_stock = 1;
}

message QuerySize{
    int32 size=1; // 页尺寸
}

message ProductResponesList{ // repeated: 是一个修饰符，返回字段可以重复任意多次（包括0次）；因为rpc是跨平台，跨语言的，所以不能使用go语法来定义切片，得使用修饰符，这样就可以把这个修饰符修饰的字段看作切片
    repeated ProductRespones products = 1; // 返回0或多个ProductRespones
}

service ProductService{
    rpc GetProductStock(ProductRequest) returns (ProductRespones){
        option (google.api.http) = {
            // localhost:8080/v1/prod/33
            get: "/v1/prod/{product_id}"  // 这里的{product_id}和message ProductRequest{int32 product_id = 1;} 是对应的，不能随意写，要和这个定义的名称一样
        };
    }

    rpc GetProductStocks(QuerySize) returns(ProductResponesList){}

    rpc GetProductInfo(ProductRequest) returns(ProductModel){} // 因为这里的models.proto中的包名和product.proto包名一样，所以这里直接使用ProductModel，如果包名不一样，则需要 包名.ProductModel
}